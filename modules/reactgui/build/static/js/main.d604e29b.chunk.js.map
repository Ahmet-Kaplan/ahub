{"version":3,"sources":["modules/fetch.js","components/MainNavLink.js","components/NodeBox.js","components/Debug.js","components/AhubGUI.js","index.js"],"names":["POST","GET","JSON_CONTENT","fetchData","method","url","data","requestOptions","arguments","length","undefined","isSuccess","methodName","toUpperCase","requestBody","Object","C_Users_Martin_Hanewald_Documents_Repos_AHUB_modules_reactgui_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","headers","Accept","body","JSON","stringify","global","fetch","then","response","ok","json","responseBody","Error","message","catch","err","get","MainNavLink","styled","Link","_templateObject","API_ENDPOINT","NodeBox","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","endpoints","getEndpoints","bind","assertThisInitialized","getEndpointResponse","updateEndpointQuery","_this2","concat","name","console","log","keys","paths","reduce","endpoint","params","parameters","setState","warn","endpointName","queryParam","_this3","event","objectSpread","defineProperty","query","target","value","_this4","queryPartsString","entries","queryString","queryParts","index","newEndpointState","_this5","react_default","a","createElement","Box","margin","horizontal","pad","Heading","level","Text","color","size","map","NodeBox_EndpointBox","key","queryParameters","Paragraph","React","Component","EndpointBox","_ref","basis","border","vertical","background","fill","param","FormField","label","description","htmlFor","TextInput","id","placeholder","onChange","Button","className","onClick","JSONPretty_default","Debug","theme","colors","brand","accent-1","neutral-1","font","family","height","AhubGUI","nodes","apis","Grommet","full","Grid","areas","start","end","columns","rows","gap","gridArea","Image","src","tag","direction","components_MainNavLink","to","node","es","NodeBox_NodeBox","path","Debug_Debug","ReactDOM","render","AhubGUI_AhubGUI","document","getElementById"],"mappings":"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","file":"static/js/main.d604e29b.chunk.js","sourcesContent":["/**\r\n * Wrapper for server calls\r\n *\r\n * Uses native browser method fetch or polyfill if not implemented\r\n * Per default calls can only be made to the same host and only have a JSON body.\r\n */\r\nimport 'whatwg-fetch';\r\n\r\nconst POST = 'POST';\r\nconst GET = 'GET';\r\nconst JSON_CONTENT = 'application/json';\r\n\r\n/**\r\n * @param {String} method           - GET | POST\r\n * @param {String} url              - the resource to call\r\n * @param {Object} data             - payload of a (post) call, has to be valid JSON\r\n * @param {Object} requestOptions   - (optional) fetch request options\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters\r\n * @returns {Promise}\r\n */\r\nfunction fetchData(method, url, data, requestOptions = {}) {\r\n    let isSuccess = false;\r\n    const methodName = method.toUpperCase();\r\n\r\n    const requestBody = {\r\n        method: methodName,\r\n        headers: {\r\n            //'Content-Type': JSON_CONTENT,\r\n            Accept: JSON_CONTENT,\r\n        },\r\n        // credentials: 'same-origin',\r\n        ...requestOptions,\r\n    };\r\n\r\n    if (method === POST) {\r\n        requestBody.body = JSON.stringify(data);\r\n    }\r\n\r\n    return global.fetch(url, requestBody)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                isSuccess = true;\r\n            }\r\n\r\n            return response.json();\r\n        })\r\n        .then(responseBody => {\r\n            if (isSuccess) {\r\n                return responseBody;\r\n            }\r\n\r\n            throw new Error(responseBody.message);\r\n        })\r\n        .catch(err => {\r\n            throw err;\r\n        });\r\n}\r\n\r\n\r\nexport function get(url) {\r\n    return fetchData(GET, url);\r\n}\r\n\r\nexport function post(url, data) {\r\n    return fetchData(POST, url, data);\r\n}\r\n","import styled from 'styled-components';\r\nimport {Link} from '@reach/router';\r\n\r\nconst MainNavLink = styled(Link)`\r\n    text-decoration: none;\r\n    margin: 16px 0;\r\n    font-size: 16px;\r\n`;\r\n\r\nexport default MainNavLink;","import React from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Heading,\r\n    Paragraph,\r\n    Text,\r\n    FormField,\r\n    TextInput,\r\n} from 'grommet';\r\nimport {get} from '../modules/fetch';\r\nimport JSONPretty from 'react-json-pretty';\r\nimport 'react-json-pretty/JSONPretty.monikai.styl';\r\n\r\nconst API_ENDPOINT = 'http://ahub.westeurope.cloudapp.azure.com:8000/';\r\n//const API_ENDPOINT = 'http://127.0.0.1:8000/';\r\n\r\nexport default class NodeBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        /**\r\n         * endpoints are structured like this:\r\n         * endpointName : {\r\n         *     query: {\r\n         *         queryParamName: queryParamValue,\r\n         *     },\r\n         *     response: responseJSON,\r\n         * }\r\n         */\r\n        this.state = {\r\n            response: 'INIT',\r\n            endpoints: {},\r\n        };\r\n\r\n        this.getEndpoints = this.getEndpoints.bind(this);\r\n        this.getEndpointResponse = this.getEndpointResponse.bind(this);\r\n        this.updateEndpointQuery = this.updateEndpointQuery.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEndpoints();\r\n    }\r\n\r\n    getEndpoints() {\r\n        get(`${API_ENDPOINT}${this.props.name}/swagger.json`)\r\n            .then(response => {\r\n                console.log(response);\r\n\r\n                const endpoints = Object.keys(response.paths).reduce((endpoints, endpoint) => {\r\n                        endpoints[endpoint] = {\r\n                            response: null,\r\n                            params: response.paths[endpoint].get.parameters,\r\n                        };\r\n                        return endpoints;\r\n                    }, {});\r\n                console.log(endpoints)\r\n                this.setState({\r\n                    endpoints,\r\n                });\r\n            })\r\n            .catch(err => console.warn(err));\r\n\r\n    }\r\n\r\n    /**\r\n     * Curried function to create query parameter value from input for given endpoint\r\n     * @param {string} endpointName\r\n     * @param {string} queryParam\r\n     * @returns {Function} event handler for onChange-event\r\n     */\r\n    updateEndpointQuery(endpointName, queryParam) {\r\n        return event => {\r\n            this.setState({\r\n                endpoints: {\r\n                    ...this.state.endpoints,\r\n                    [endpointName]: {\r\n                        // spreading does not apply a deep merge, so we have to traverse every level manually\r\n                        ...this.state.endpoints[endpointName],\r\n                        query: {\r\n                            ...this.state.endpoints[endpointName].query,\r\n                            [queryParam]: event.target.value,\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    getEndpointResponse(endpointName) {\r\n        let queryPartsString = '';\r\n\r\n        // only build query params if we have query parts\r\n        if(this.state.endpoints[endpointName].query) {\r\n            queryPartsString = Object.entries(this.state.endpoints[endpointName].query)\r\n                .reduce((queryString, queryParts, index) => {\r\n                    // only add query parts if we actually have a value\r\n                    if (queryParts[1]) {\r\n                        // the query string has to start with '?'\r\n                        queryString += `${queryString.length > 0 ? '&' : '?'}${queryParts[0]}=${queryParts[1]}`;\r\n                    }\r\n                    return queryString;\r\n                }, '');\r\n        }\r\n\r\n        get(`${API_ENDPOINT}${this.props.name}/${endpointName}${queryPartsString}`)\r\n            .then(response => {\r\n                const newEndpointState = {\r\n                    ...this.state.endpoints,\r\n                    [endpointName]: {\r\n                        ...this.state.endpoints[endpointName],\r\n                        response,\r\n                    }\r\n                };\r\n\r\n                this.setState({\r\n                    endpoints: newEndpointState,\r\n                });\r\n            })\r\n            .catch(err => console.warn(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box\r\n                margin={{\r\n                    horizontal: 'medium'\r\n                }}\r\n                pad='medium'\r\n            >\r\n                <Heading level='2'>\r\n                    Overview for: <Text color='accent-1' size='xxlarge'>{this.props.name}</Text>\r\n                </Heading>\r\n                {\r\n                    this.state.endpoints\r\n                        ? Object.keys(this.state.endpoints).map(endpoint => (\r\n                            <EndpointBox\r\n                                key={`${this.props.name}-endpoint-${endpoint}`}\r\n                                name={endpoint}\r\n                                queryParameters={this.state.endpoints[endpoint].params}\r\n                                updateEndpointQuery={this.updateEndpointQuery}\r\n                                response={this.state.endpoints[endpoint].response}\r\n                                getEndpointResponse={this.getEndpointResponse}\r\n                            />\r\n                        ))\r\n                        : <Paragraph>Loading endpoint functions...</Paragraph>\r\n                }\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst EndpointBox = ({\r\n    name,\r\n    response,\r\n    queryParameters,\r\n    getEndpointResponse,\r\n    updateEndpointQuery,\r\n}) => {\r\n    return (\r\n        <Box\r\n            basis='auto'\r\n            border='all'\r\n            margin={{\r\n                vertical: 'medium'\r\n            }}\r\n            pad='medium'\r\n            background='neutral-1'\r\n            fill={false}\r\n        >\r\n            {queryParameters && queryParameters.map(param => (\r\n                <FormField\r\n                    label={`${param.name} (${param.description})`}\r\n                    htmlFor={`input-${param.name}`}\r\n                    key={`${name}-input-${param.name}`}\r\n                >\r\n                    <TextInput\r\n                        id={`input-${param.name}`}\r\n                        placeholder={param.name}\r\n                        onChange={updateEndpointQuery(name, param.name)}\r\n                    />\r\n                </FormField>\r\n            ))}\r\n            <Button\r\n                className='endpointbutton'\r\n                onClick={() => getEndpointResponse(name)}\r\n                label={name.toUpperCase()}\r\n            />\r\n            {\r\n                response &&\r\n                <JSONPretty id='json-pretty' json={response}/>\r\n            }\r\n        </Box>\r\n    );\r\n};\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Heading,\r\n    Paragraph,\r\n    Text,\r\n    TextArea,\r\n} from 'grommet';\r\n\r\n\r\nexport default class Debug extends React.Component {\r\n\r\n  render(){\r\n    return(\r\n      <Box\r\n          margin={{\r\n              horizontal: 'medium'\r\n          }}\r\n          pad='medium'\r\n      >\r\n          <Heading level='2'>\r\n              Debug\r\n          </Heading>\r\n          <Box\r\n              basis='auto'\r\n              border='all'\r\n              margin={{\r\n                  vertical: 'medium'\r\n              }}\r\n              pad='medium'\r\n              background='neutral-1'\r\n              fill={false}\r\n          >\r\n          </Box>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Grommet,\r\n    Grid,\r\n    Box,\r\n    Image,\r\n} from 'grommet'\r\nimport {\r\n    Router,\r\n} from '@reach/router';\r\nimport { get } from '../modules/fetch';\r\nimport MainNavLink from './MainNavLink';\r\nimport NodeBox from './NodeBox';\r\nimport Debug from './Debug'\r\n\r\nconst API_ENDPOINT = 'http://ahub.westeurope.cloudapp.azure.com:8000/';\r\n//const API_ENDPOINT = 'localhost:8000';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#003E81',\r\n            'accent-1': '#009EDA',\r\n            'neutral-1': '#000',\r\n        },\r\n        font: {\r\n            family: 'Roboto',\r\n            size: '14px',\r\n            height: '20px',\r\n        },\r\n    },\r\n};\r\n\r\nexport default class AhubGUI extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        get(`${API_ENDPOINT}boss/get_services`)\r\n            .then(response => this.setState({ nodes: response.apis }))\r\n            .catch(err => {\r\n                console.warn(err);\r\n                // prefill nodes for testing purposes\r\n                this.setState({ nodes: ['node1', 'node2'] });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grommet\r\n                theme={theme}\r\n                full\r\n            >\r\n                    <Grid\r\n                        fill\r\n                        areas={[\r\n                            { name: 'nav', start: [0, 0], end: [0, 0] },\r\n                            { name: 'main', start: [1, 0], end: [1, 0] }\r\n                        ]}\r\n                        columns={['small', 'flex']}\r\n                        rows={['flex']}\r\n                        gap='none'\r\n                    >\r\n                        <Box\r\n                            gridArea='nav'\r\n                            background='brand'\r\n                            pad='medium'\r\n                        >\r\n                            <Box>\r\n                                <Image\r\n                                    src='https://qunis.de/wordpress-qunis/wp-content/themes/qunis-theme-2016/images/interface/qunis-big-data-logo-w2x.png'\r\n                                />\r\n                            </Box>\r\n                            <Box\r\n                                tag='nav'\r\n                                direction='column'\r\n                                margin={{\r\n                                    vertical: 'large'\r\n                                }}\r\n                            >\r\n                                <MainNavLink to='/'>Home</MainNavLink>\r\n                                {\r\n                                    this.state.nodes\r\n                                    && this.state.nodes.map(node => (\r\n                                        <MainNavLink\r\n                                            key={`navlink-${node}`}\r\n                                            to={node}\r\n                                        >\r\n                                            {node}\r\n                                        </MainNavLink>\r\n                                    ))\r\n                                }\r\n                                <MainNavLink to='debug'>Debug</MainNavLink>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box\r\n                            gridArea='main'\r\n                            background='brand'\r\n                        >\r\n                            <Router>\r\n                                {\r\n                                    this.state.nodes\r\n                                    && this.state.nodes.map(node => (\r\n                                        <NodeBox\r\n                                            key={`nodebox-${node}`}\r\n                                            path={node}\r\n                                            name={node}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                                <Debug path='/debug'/>\r\n                            </Router>\r\n                        </Box>\r\n                    </Grid>\r\n            </Grommet>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AhubGUI from './components/AhubGUI';\r\n\r\nReactDOM.render(\r\n  <AhubGUI />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}